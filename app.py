import streamlit as st
import json
from datetime import datetime
from geopy.geocoders import Nominatim

# --- Configurations ---
API_KEY = "AIzaSyCsfJgoE10pmFhxAKLN4EXRX4ESmbTpB7A"
st.set_page_config(page_title="Yugdaan тАУ Personalized Farming Assistant", layout="centered")
st.title("ЁЯМ╛ Yugdaan тАУ Personalized Farming Assistant for Bihar")

# --- Load Pincode-District Mapping ---
try:
    with open("bihar_pincode_district_map.json", "r", encoding="utf-8") as f:
        district_map = json.load(f)
except FileNotFoundError:
    district_map = {}

# --- Get District from Pincode ---
pincode = st.text_input("ЁЯУо Enter your pincode (рдкрд┐рдирдХреЛрдб рджрд░реНрдЬ рдХрд░реЗрдВ):")
district = district_map.get(pincode)

if pincode and not district:
    st.warning("тЪая╕П рдпрд╣ рдкрд┐рдирдХреЛрдб рд╣рдорд╛рд░реЗ рд╕рд┐рд╕реНрдЯрдо рдореЗрдВ рдирд╣реАрдВ рдорд┐рд▓рд╛ред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдЬрд╛рдВрдЪреЗрдВред")

# --- Satellite Image Function ---
def get_satellite_image_url(pincode):
    geolocator = Nominatim(user_agent="yugdaan-live-app")
    location = geolocator.geocode({"postalcode": pincode, "country": "India"})
    if location:
        lat, lon = location.latitude, location.longitude
        return (
            f"https://maps.googleapis.com/maps/api/staticmap?"
            f"center={lat},{lon}&zoom=14&size=600x400&maptype=satellite"
            f"&markers=color:red%7Clabel:P%7C{lat},{lon}"
            f"&key={API_KEY}"
        )
    return None

# --- Show Satellite Image ---
if pincode:
    sat_url = get_satellite_image_url(pincode)
    if sat_url:
        st.image(sat_url, caption="ЁЯУН рдЖрдкрдХреЗ рдЦреЗрдд рдХрд╛ рд╕реИрдЯреЗрд▓рд╛рдЗрдЯ рджреГрд╢реНрдп")

# --- Farm Questionnaire ---
if district:
    st.subheader("ЁЯСитАНЁЯМ╛ рдЦреЗрддреА рдХреА рдЬрд╛рдирдХрд╛рд░реА рджрд░реНрдЬ рдХрд░реЗрдВ")
    land_size = st.selectbox("ЁЯз▒ рдХрд┐рддрдиреА рдЬрд╝рдореАрди рдореЗрдВ рдЦреЗрддреА рдХрд░рдирд╛ рд╣реИ?", ["<1 acre", "1тАУ2 acres", "2тАУ5 acres", "5+ acres"])
    budget = st.selectbox("ЁЯТ░ рдЙрдкрд▓рдмреНрдз рдмрдЬрдЯ рдХрд┐рддрдирд╛ рд╣реИ?", ["<тВ╣10,000", "тВ╣10,000тАУтВ╣25,000", "тВ╣25,000тАУтВ╣50,000", "тВ╣50,000+"])
    goal = st.selectbox("ЁЯОп рдЖрдкрдХреА рдкреНрд░рд╛рдердорд┐рдХрддрд╛ рдХреНрдпрд╛ рд╣реИ?", ["High Profit", "Short Duration", "Low Cost", "Less Effort"])

    st.markdown("---")
    st.subheader("ЁЯУК рд╕реБрдЭрд╛рд╡ рдФрд░ рдпреЛрдЬрдирд╛рдПрдВ")

    # --- Sample AI Logic ---
    st.markdown(f"ЁЯЧ║я╕П рдЬрд┐рд▓рд╛: **{district}**")
    st.markdown(f"ЁЯУР рдЬрд╝рдореАрди: **{land_size}** | ЁЯТ╕ рдмрдЬрдЯ: **{budget}** | ЁЯОп рд▓рдХреНрд╖реНрдп: **{goal}**")

    # Example recommendations (mock logic)
    if goal == "High Profit":
        st.success("ЁЯМ▒ рдЖрдк **рдбреНрд░реИрдЧрди рдлреНрд░реВрдЯ**, **рдЕрд╡реЛрдХрд╛рдбреЛ**, рдпрд╛ **рдЧреНрд▓реИрдбрд┐рдпреЛрд▓рд╕ рдлреВрд▓** рдЙрдЧрд╛ рд╕рдХрддреЗ рд╣реИрдВред")
        st.info("ЁЯТб рд╢реБрд░реБрдЖрддреА рд▓рд╛рдЧрдд: тВ╣40,000тАУтВ╣60,000 рдкреНрд░рддрд┐ рдПрдХрдбрд╝ | рдЕрдиреБрдорд╛рдирд┐рдд рд▓рд╛рдн: тВ╣1.5тАУ2 рд▓рд╛рдЦ рдкреНрд░рддрд┐ рдПрдХрдбрд╝")
        st.markdown("ЁЯУЕ **рдЕрдЧрд╕реНрдд-рд╕рд┐рддрдВрдмрд░** рдореЗрдВ рд╢реБрд░реБрдЖрдд рдХрд░реЗрдВ, 12-14 рдорд╣реАрдиреЗ рдореЗрдВ рдлрд╕рд▓ рддреИрдпрд╛рд░ рд╣реЛрддреА рд╣реИред")

    elif goal == "Short Duration":
        st.success("ЁЯМ┐ рдЖрдк **рдореВрд▓реА**, **рдкрд╛рд▓рдХ**, рдпрд╛ **рдзрдирд┐рдпрд╛** рдЬреИрд╕реЗ рдлрд╕рд▓реЗрдВ рдЙрдЧрд╛ рд╕рдХрддреЗ рд╣реИрдВред")
        st.info("ЁЯЧУя╕П 30тАУ60 рджрд┐рдиреЛрдВ рдореЗрдВ рдлрд╕рд▓ рддреИрдпрд╛рд░ | тВ╣5,000тАУтВ╣15,000 рд▓рд╛рдЧрдд")

    elif goal == "Low Cost":
        st.success("ЁЯеФ **рдЖрд▓реВ**, **рдкреНрдпрд╛рдЬ**, рдпрд╛ **рдЪрдирд╛** рдЬреИрд╕реЗ рдкрд╛рд░рдВрдкрд░рд┐рдХ рдлрд╕рд▓реЗрдВ рдЙрдЧрд╛рдЗрдПред")
        st.info("ЁЯТ░ рд▓рд╛рдЧрдд: тВ╣8,000тАУтВ╣20,000 рдкреНрд░рддрд┐ рдПрдХрдбрд╝ | рд▓рд╛рдн: тВ╣30,000тАУтВ╣60,000")

    else:
        st.success("ЁЯМ╛ рдЖрдк **рдЧреЗрд╣реВрдВ**, **рд╕рд░рд╕реЛрдВ**, рдпрд╛ **рдордХреНрдХрд╛** рдЬреИрд╕реЗ рдЖрд╕рд╛рди рджреЗрдЦрднрд╛рд▓ рд╡рд╛рд▓реА рдлрд╕рд▓реЗрдВ рдЙрдЧрд╛ рд╕рдХрддреЗ рд╣реИрдВред")

    st.markdown("ЁЯУж рдЬрд╝рд░реВрд░реА рд╕рд╛рдордЧреНрд░реА, рдЙрд░реНрд╡рд░рдХ рдФрд░ рдмреАрдЬреЛрдВ рдХреА рд╕реВрдЪреА рдЬрд▓реНрдж рд╣реА рдЙрдкрд▓рдмреНрдз рд╣реЛрдЧреАред")
    st.markdown("ЁЯФБ рдЕрдЧрд▓реЗ рдЕрдкрдбреЗрдЯ рдореЗрдВ Google рд╕реЗ рдбреАрд▓рд░ рдбреЗрдЯрд╛, рдордВрдбреА рднрд╛рд╡ рдФрд░ рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ рдХрд╛рд░реНрдп рднреА рдЬреЛрдбрд╝реЗ рдЬрд╛рдПрдВрдЧреЗред")
else:
    st.info("ЁЯУЭ рдЦреЗрддреА рдХреА рд╕рд▓рд╛рд╣ рдкрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдКрдкрд░ рдЕрдкрдирд╛ рдкрд┐рдирдХреЛрдб рджрд░реНрдЬ рдХрд░реЗрдВред")
