
import streamlit as st
import requests

st.set_page_config(page_title="üåæ Yugdaan - Smart Farming Bihar", layout="centered")
st.title("üåæ Yugdaan - ‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•Ä ‡§Ö‡§™‡§®‡•Ä ‡§∏‡§≤‡§æ‡§π‡§ï‡§æ‡§∞")
st.markdown("‡§´‡§∏‡§≤, ‡§Æ‡•å‡§∏‡§Æ, ‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ ‡§î‡§∞ ‡§ú‡§º‡§∞‡•Ç‡§∞‡§§ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§∏‡•Å‡§ù‡§æ‡§µ ‚Ä¢ Crop, mandi and weather-based guidance")

districts = {
    "Darbhanga": "Darbhanga,IN",
    "Vaishali": "Hajipur,IN",
    "Aara": "Arrah,IN",
    "Chapra": "Chhapra,IN",
    "Balia": "Ballia,IN"
}
district = st.selectbox("üìç Select your district (‡§ú‡§ø‡§≤‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç)", list(districts.keys()))
city_name = districts[district]

api_key = "cce8745e8f0664cd77af8b135789fe54"
url = f"http://api.openweathermap.org/data/2.5/weather?q={city_name}&appid={api_key}&units=metric"

try:
    response = requests.get(url)
    weather_data = response.json()
    if weather_data["cod"] == 200:
        temp = weather_data["main"]["temp"]
        humidity = weather_data["main"]["humidity"]
        weather = weather_data["weather"][0]["description"]
        rain = "rain" in weather.lower()
        st.markdown("### üå¶Ô∏è Weather Today (‡§Ü‡§ú ‡§ï‡§æ ‡§Æ‡•å‡§∏‡§Æ)")
        st.write(f"- Temperature (‡§§‡§æ‡§™‡§Æ‡§æ‡§®): {temp}¬∞C")
        st.write(f"- Humidity (‡§®‡§Æ‡•Ä): {humidity}%")
        st.write(f"- Condition: {weather.capitalize()} ({'‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§π‡•ã ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à' if rain else '‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§ó‡•Ä'})")
except:
    st.warning("Weather data unavailable at the moment.")

# Mocked mandi prices
mandi_prices = {
    "Darbhanga": [("‡§ß‡§æ‡§® (Paddy)", 1860), ("‡§Æ‡§ï‡•ç‡§ï‡§æ (Maize)", 1750)],
    "Vaishali": [("‡§ó‡•á‡§π‡•Ç‡§Ç (Wheat)", 2100), ("‡§Ü‡§≤‡•Ç (Potato)", 1600)],
    "Aara": [("‡§∏‡§∞‡§∏‡•ã‡§Ç (Mustard)", 5000), ("‡§¨‡•à‡§Ç‡§ó‡§® (Brinjal)", 2500)],
    "Chapra": [("‡§™‡•ç‡§Ø‡§æ‡§ú (Onion)", 1400), ("‡§ü‡§Æ‡§æ‡§ü‡§∞ (Tomato)", 1800)],
    "Balia": [("‡§ö‡§®‡§æ (Gram)", 4600), ("‡§ï‡§¶‡•ç‡§¶‡•Ç (Pumpkin)", 1300)],
}
st.markdown("### üè™ Mandi Prices Today (‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ)")
for crop, price in mandi_prices[district]:
    st.write(f"- {crop}: ‚Çπ{price} per quintal (‡§ï‡•ç‡§µ‡§ø‡§Ç‡§ü‡§≤)")

st.markdown("### üõ∞Ô∏è Satellite Soil Moisture (Mock Data)")
soil_moisture_status = {
    "Darbhanga": "Low",
    "Vaishali": "Medium",
    "Aara": "Low",
    "Chapra": "Medium",
    "Balia": "High"
}
moisture = soil_moisture_status.get(district, "Medium")
st.info(f"üß™ ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§ï‡•Ä ‡§®‡§Æ‡•Ä: **{moisture}** (based on NASA/ISRO trend)")

st.markdown("### üß† Answer a few questions (‡§ï‡•Å‡§õ ‡§∏‡§µ‡§æ‡§≤‡•ã‡§Ç ‡§ï‡•á ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§Ç)")

land = st.radio("‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§ï‡§ø‡§§‡§®‡•Ä ‡§ú‡§º‡§Æ‡•Ä‡§® ‡§π‡•à? (Land size)", ["1-2 acre", "2-5 acre", "More than 5 acre"])
irrigation = st.radio("‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à ‡§ï‡•Ä ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ ‡§π‡•à? (Do you have irrigation?)", ["Yes", "No"])
wait_time = st.radio("‡§Ü‡§™ ‡§ï‡§ø‡§§‡§®‡•á ‡§∏‡§Æ‡§Ø ‡§§‡§ï ‡§á‡§Ç‡§§‡§ú‡§º‡§æ‡§∞ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§´‡§º‡§∏‡§≤ ‡§ï‡•á ‡§≤‡§ø‡§è?", ["Short (3 months)", "Medium (6 months)", "Long (9+ months)"])

crop_knowledge = {
    "Darbhanga": [
        {"name": "Paddy (‡§ß‡§æ‡§®) ‚Äì Kharif", "water": "high", "wait": "Medium", "profit": "high"},
        {"name": "Banana (‡§ï‡•á‡§≤‡§æ)", "water": "high", "wait": "Long", "profit": "high"},
        {"name": "Marigold (‡§ó‡•á‡§Ç‡§¶‡§æ)", "water": "low", "wait": "Short", "profit": "medium"},
        {"name": "Maize (‡§Æ‡§ï‡•ç‡§ï‡§æ) ‚Äì Kharif", "water": "medium", "wait": "Medium", "profit": "medium"},
    ],
    "Vaishali": [
        {"name": "Litchi (‡§≤‡•Ä‡§ö‡•Ä)", "water": "high", "wait": "Long", "profit": "high"},
        {"name": "Mustard (‡§∏‡§∞‡§∏‡•ã‡§Ç) ‚Äì Rabi", "water": "low", "wait": "Short", "profit": "medium"},
        {"name": "Potato (‡§Ü‡§≤‡•Ç) ‚Äì Rabi", "water": "medium", "wait": "Short", "profit": "high"},
        {"name": "Wheat (‡§ó‡•á‡§π‡•Ç‡§Ç) ‚Äì Rabi", "water": "medium", "wait": "Medium", "profit": "medium"},
    ],
    "Aara": [
        {"name": "Sugarcane (‡§ó‡§®‡•ç‡§®‡§æ)", "water": "high", "wait": "Long", "profit": "high"},
        {"name": "Cauliflower (‡§´‡•Ç‡§≤‡§ó‡•ã‡§≠‡•Ä)", "water": "low", "wait": "Short", "profit": "medium"},
        {"name": "Brinjal (‡§¨‡•à‡§Ç‡§ó‡§®)", "water": "medium", "wait": "Medium", "profit": "medium"},
    ],
    "Chapra": [
        {"name": "Garlic (‡§≤‡§π‡§∏‡•Å‡§®)", "water": "low", "wait": "Medium", "profit": "medium"},
        {"name": "Tomato (‡§ü‡§Æ‡§æ‡§ü‡§∞)", "water": "medium", "wait": "Short", "profit": "high"},
    ],
    "Balia": [
        {"name": "Onion (‡§™‡•ç‡§Ø‡§æ‡§ú)", "water": "medium", "wait": "Short", "profit": "high"},
        {"name": "Pumpkin (‡§ï‡§¶‡•ç‡§¶‡•Ç)", "water": "low", "wait": "Short", "profit": "medium"},
    ]
}

st.markdown("### ‚úÖ Recommended Crops (‡§Ö‡§®‡•Å‡§∂‡§Ç‡§∏‡§ø‡§§ ‡§´‡§º‡§∏‡§≤‡•á‡§Ç)")
filtered = []
for crop in crop_knowledge.get(district, []):
    if (irrigation == "No" and crop["water"] == "high"):
        continue
    if wait_time.startswith("Short") and crop["wait"] != "Short":
        continue
    if wait_time.startswith("Medium") and crop["wait"] == "Long":
        continue
    filtered.append(crop["name"])

if filtered:
    for crop in filtered:
        st.markdown(f"- üå± {crop}")
else:
    st.warning("‡§ï‡•ã‡§à ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§´‡§º‡§∏‡§≤ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä (No suitable crop found for your selection).")

st.markdown("---")
st.info("‚ÑπÔ∏è Kharif: Monsoon crops (‡§ú‡•à‡§∏‡•á ‡§ß‡§æ‡§®, ‡§Æ‡§ï‡•ç‡§ï‡§æ) ‚Ä¢ Rabi: Winter crops (‡§ú‡•à‡§∏‡•á ‡§ó‡•á‡§π‡•Ç‡§Ç, ‡§∏‡§∞‡§∏‡•ã‡§Ç)")
st.caption("Prototype v3 ‚Ä¢ Real weather + mandi + soil + advisory")
